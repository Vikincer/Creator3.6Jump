{"version":3,"sources":["file:///D:/Hword/wx/maomao/Creator3.6Jump/assets/Scripts/PlayerController.ts"],"names":["_decorator","Component","Vec3","input","Input","Animation","SkeletalAnimation","ccclass","property","PlayerController","type","_startJump","_jumpStep","_curJumpTime","_jumpTime","_curJumpSpeed","_curPos","_deltaPos","_targetPos","_curMoveIndex","start","reset","setInputActive","active","on","EventType","MOUSE_UP","onMouseUp","off","event","getButton","jumpByStep","step","node","getPosition","add","CocosAnim","getState","speed","play","onOnceJumpEnd","emit","update","deltaTime","setPosition","x"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, input, Input, EventMouse, Animation, SkeletalAnimation } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"PlayerController\")\r\nexport class PlayerController extends Component {\r\n\r\n    @property({type: Animation})\r\n    public BodyAnim: Animation|null = null;\r\n    @property({type: SkeletalAnimation})\r\n    public CocosAnim: SkeletalAnimation|null = null;\r\n\r\n    // for fake tween\r\n    private _startJump: boolean = false;\r\n    private _jumpStep: number = 0;\r\n    private _curJumpTime: number = 0;\r\n    private _jumpTime: number = 0.3;\r\n    private _curJumpSpeed: number = 0;\r\n    private _curPos: Vec3 = new Vec3();\r\n    private _deltaPos: Vec3 = new Vec3(0, 0, 0);\r\n    private _targetPos: Vec3 = new Vec3();\r\n    private _curMoveIndex = 0;\r\n\r\n    start () {\r\n    }\r\n\r\n    reset() {\r\n        this._curMoveIndex = 0;\r\n    }\r\n\r\n    setInputActive(active: boolean) {\r\n        if (active) {\r\n            input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n        } else {\r\n            input.off(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n        }\r\n    }\r\n\r\n    onMouseUp(event: EventMouse) {\r\n        if (event.getButton() === 0) {\r\n            this.jumpByStep(1);\r\n        } else if (event.getButton() === 2) {\r\n            this.jumpByStep(2);\r\n        }\r\n\r\n    }\r\n\r\n    jumpByStep(step: number) {\r\n        if (this._startJump) {\r\n            return;\r\n        }\r\n        this._startJump = true;\r\n        this._jumpStep = step;\r\n        this._curJumpTime = 0;\r\n        this._curJumpSpeed = this._jumpStep / this._jumpTime;\r\n        this.node.getPosition(this._curPos);\r\n        Vec3.add(this._targetPos, this._curPos, new Vec3(this._jumpStep, 0, 0));\r\n\r\n        if (this.CocosAnim) {\r\n            this.CocosAnim.getState('cocos_anim_jump').speed = 3.5; //跳跃动画时间比较长，这里加速播放\r\n            this.CocosAnim.play('cocos_anim_jump'); //播放跳跃动画\r\n        }\r\n\r\n        // if (this.BodyAnim) {\r\n        //     if (step === 1) {\r\n        //         this.BodyAnim.play('oneStep');\r\n        //     } else if (step === 2) {\r\n        //         this.BodyAnim.play('twoStep');\r\n        //     }\r\n        // }\r\n\r\n        this._curMoveIndex += step;\r\n    }\r\n\r\n    onOnceJumpEnd() {\r\n        if (this.CocosAnim) {\r\n            this.CocosAnim.play('cocos_anim_idle');\r\n        }\r\n\r\n        this.node.emit('JumpEnd', this._curMoveIndex);\r\n    }\r\n\r\n    update (deltaTime: number) {\r\n        if (this._startJump) {\r\n            this._curJumpTime += deltaTime;\r\n            if (this._curJumpTime > this._jumpTime) {\r\n                // end\r\n                this.node.setPosition(this._targetPos);\r\n                this._startJump = false;\r\n                this.onOnceJumpEnd();\r\n            } else {\r\n                // tween\r\n                this.node.getPosition(this._curPos);\r\n                this._deltaPos.x = this._curJumpSpeed * deltaTime;\r\n                Vec3.add(this._curPos, this._curPos, this._deltaPos);\r\n                this.node.setPosition(this._curPos);\r\n            }\r\n        }\r\n    }\r\n}"]}